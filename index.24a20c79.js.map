{"mappings":"ACEA,IAAM,EAAY,SAAS,gBAAgB,CAAC,MACtC,EAAK,SAAS,aAAa,CAAC,MAElC,AASA,CAAA,SAAkB,CAAI,EACpB,IAAM,EAAa,EAAE,CAEhB,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAY,CAAA,CAAA,OAAA,QAAA,CAAA,GAAZ,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAW,IAAI,CAPV,OAAO,AAFC,AASgB,EATR,OAAO,CAAC,MAAM,CAEhB,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,K,C,C,M,E,CAMtC,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,EAAW,IAAI,CAAC,SAAC,CAAA,CAAG,CAApB,EAA0B,OAAA,EAAI,C,GAE9B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAW,MAAM,CAAE,IAAK,CAC1C,IAAM,EAAW,CAAU,CAAC,EAAE,CAAC,cAAc,CAAC,SAE9C,EAAG,MAAM,CAAC,EAAG,aAAa,CAAE,kBAA0B,MAAA,CAAT,EAAS,OACxD,CACF,CAAA,EAvBS,GACT,AAwBA,SAAsB,CAAI,EACxB,IAAM,EAAY,EAAE,CAEf,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAY,CAAA,CAAA,OAAA,QAAA,CAAA,GAAZ,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAU,IAAI,CAAC,CACb,KAAM,EAAG,WAAW,CAAC,IAAI,GACzB,SAAU,EAAG,OAAO,CAAC,QAAQ,CAC7B,OAAQ,EAAG,OAAO,CAAC,MAAM,CACzB,IAAK,EAAG,OAAO,CAAC,GAAG,AACrB,E,C,C,M,E,CANG,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAUP,C,2D;CArCa","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar employees = document.querySelectorAll(\"li\");\nvar ul = document.querySelector(\"ul\");\nsortList(employees);\ngetEmployees(employees);\nfunction formatSalary(element) {\n    var salary = element.dataset.salary;\n    return Number(salary.slice(1).replace(\",\", \"\"));\n}\nfunction sortList(list) {\n    var listSalary = [];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var li = _step.value;\n            listSalary.push(formatSalary(li));\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    listSalary.sort(function(a, b) {\n        return b - a;\n    });\n    for(var i = 0; i < listSalary.length; i++){\n        var selector = listSalary[i].toLocaleString(\"en-US\");\n        ul.append(ul.querySelector('[data-salary=\"$'.concat(selector, '\"]')));\n    }\n}\nfunction getEmployees(list) {\n    var resultArr = [];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var li = _step.value;\n            resultArr.push({\n                name: li.textContent.trim(),\n                position: li.dataset.position,\n                salary: li.dataset.salary,\n                age: li.dataset.age\n            });\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return resultArr;\n}\n\n//# sourceMappingURL=index.24a20c79.js.map\n","'use strict';\n\nconst employees = document.querySelectorAll('li');\nconst ul = document.querySelector('ul');\n\nsortList(employees);\ngetEmployees(employees);\n\nfunction formatSalary(element) {\n  const salary = element.dataset.salary;\n\n  return Number(salary.slice(1).replace(',', ''));\n}\n\nfunction sortList(list) {\n  const listSalary = [];\n\n  for (const li of list) {\n    listSalary.push(formatSalary(li));\n  };\n\n  listSalary.sort((a, b) => b - a);\n\n  for (let i = 0; i < listSalary.length; i++) {\n    const selector = listSalary[i].toLocaleString('en-US');\n\n    ul.append(ul.querySelector(`[data-salary=\"$${selector}\"]`));\n  }\n}\n\nfunction getEmployees(list) {\n  const resultArr = [];\n\n  for (const li of list) {\n    resultArr.push({\n      name: li.textContent.trim(),\n      position: li.dataset.position,\n      salary: li.dataset.salary,\n      age: li.dataset.age,\n    });\n  };\n\n  return resultArr;\n}\n"],"names":["employees","document","querySelectorAll","ul","querySelector","sortList","list","listSalary","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","li","value","push","Number","salary","element","dataset","slice","replace","err","return","sort","a","b","i","length","selector","toLocaleString","append","concat","getEmployees","resultArr","name","textContent","trim","position","age"],"version":3,"file":"index.24a20c79.js.map"}